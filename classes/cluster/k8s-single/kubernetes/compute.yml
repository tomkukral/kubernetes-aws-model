classes:
  - system.linux.system.repo.docker
  - system.kubernetes.pool.single
  - system.salt.minion.cert.k8s_client_single
  - system.salt.minion.cert.etcd_client_single
  - cluster.k8s-single
  - cluster.k8s-single.nfs.client
parameters:
  _param:
    # images
    kubernetes_calicoctl_image: calico/ctl:v1.6.1
    kubernetes_calico_image: calico/node:v1.6.1
    kubernetes_calico_cni_image: calico/cni:v1.6.1
    kubernetes_hyperkube_image: gcr.io/google_containers/hyperkube-amd64:v1.7.6

  salt:
    minion:
      cert:
        k8s_client:
          alternative_names: IP:${_param:single_address},DNS:${linux:network:fqdn},DNS:${linux:network:hostname}
        etcd_client:
          alternative_names: DNS:${linux:system:name},DNS:${linux:network:fqdn},DNS:${_param:single_address}
  docker:
    host:
      pkgs:
        - docker-engine=1.12.6-0~ubuntu-xenial
        - python-docker
  kubernetes:
    pool:
      network:
        etcd:
          ssl:
            enabled: true
        image: ${_param:kubernetes_calico_image}
        calicoctl:
          image: ${_param:kubernetes_calicoctl_image}
        cni:
          image: ${_param:kubernetes_calico_cni_image}
    common:
      hyperkube:
        image: ${_param:kubernetes_hyperkube_image}
      cloudprovider:
        enabled: True
        provider: aws
  linux:
    network:
      resolv:
        dns:
          - 10.254.0.10
          - 8.8.8.8
          - 8.8.4.4
