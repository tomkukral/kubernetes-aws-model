classes:
- system.linux.system.repo.docker
- system.kubernetes.pool.cluster
- system.salt.minion.cert.k8s_client
- system.salt.minion.cert.etcd_client
- cluster.virtual-mcp11-k8s-calico-aws
parameters:
  salt:
    minion:
      cert:
        k8s_client:
          alternative_names: DNS:${_param:cluster_vip_address},IP:${_param:cluster_node01_address},IP:${_param:cluster_node02_address},IP:${_param:cluster_node03_address},IP:${_param:kubernetes_internal_api_address}
  docker:
    host:
      pkgs:
        - docker-engine=1.12.6-0~ubuntu-xenial
        - python-docker
  kubernetes:
    pool:
      network:
        etcd:
          ssl:
            enabled: true
        image: ${_param:kubernetes_calico_image}
        calicoctl:
          image: ${_param:kubernetes_calicoctl_image}
        cni:
          image: ${_param:kubernetes_calico_cni_image}
      kubelet:
        runtime: crio
        daemon_opts:
          container-runtime: remote
          container-runtime-endpoint: /var/run/crio.sock
          runtime-request-timeout: 10m
          experimental-cri: 'true'
    common:
      hyperkube:
        image: ${_param:kubernetes_hyperkube_image}
  linux:
    network:
      resolv:
        dns:
          - 10.254.0.10
          - 8.8.8.8
          - 8.8.4.4

    system:
      repo:
        atomic_team:
          source: "deb http://ppa.launchpad.net/projectatomic/ppa/ubuntu ${_param:linux_system_codename} main"
          architectures: amd64
          key_id: 7AD8C79D
          key_server: keyserver.ubuntu.com
